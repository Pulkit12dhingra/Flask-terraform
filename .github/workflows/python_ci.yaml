name: Python CI

on:
  push:
    branches: [ main ]

jobs:
  testing:
    name: Lint & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Run CI steps via Makefile
        run: make ci
  
  terraform-checks:
    name: Terraform Checks
    runs-on: ubuntu-latest
    needs: testing
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up TFLint
        uses: terraform-linters/setup-tflint@v5

      - name: Run TFLint
        run: tflint

      - name: Run tfsec
        uses: aquasecurity/tfsec-action@v1.0.3
        with:
          additional_args: --minimum-severity HIGH
          soft_fail: false
  
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: terraform-checks
    permissions:
      id-token: write
      contents: read
    outputs:
      image_uri: ${{ steps.push.outputs.image_uri }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          docker build -t myapp:${{ github.sha }} .
          docker images | grep myapp

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::217262486301:role/Github-Actions
          aws-region: us-east-1

      - name: Login & Push to ECR
        id: push
        run: |
          aws ecr get-login-password --region us-east-1 \
            | docker login --username AWS --password-stdin 217262486301.dkr.ecr.us-east-1.amazonaws.com

          IMAGE_URI=217262486301.dkr.ecr.us-east-1.amazonaws.com/test_flask/pulkit:${{ github.sha }}
          docker tag myapp:${{ github.sha }} $IMAGE_URI
          docker push $IMAGE_URI
          echo "image_uri=$IMAGE_URI" >> "$GITHUB_OUTPUT"

  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read
    defaults:
      run:
        working-directory: infra  # adjust if your .tf files are elsewhere
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::217262486301:role/Github-Actions
          aws-region: us-east-1

      - name: Verify AWS identity
        run: aws sts get-caller-identity

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Terraform Init
        run: terraform init -input=false -reconfigure

      - name: Select or create workspace
        run: terraform workspace select test || terraform workspace new test

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan (test)
        run: terraform plan -input=false -var="image_url=${{ needs.build.outputs.image_uri }}"
